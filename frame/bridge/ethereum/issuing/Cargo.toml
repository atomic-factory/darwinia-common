[package]
authors     = ["Darwinia Network <hello@darwinia.network>"]
description = "FRAME pallet to back Ethereum assets"
edition     = "2018"
homepage    = "https://darwinia.network/"
license     = "GPL-3.0"
name        = "darwinia-ethereum-issuing"
readme      = "README.md"
repository  = "https://github.com/darwinia-network/darwinia-common/"
version     = "1.0.0"

[dependencies]
# crates
codec      = { package = "parity-scale-codec", version = "1.3.5", default-features = false, features = ["derive"] }
serde      = { version = "1.0.118", optional = true }
serde_json = { version = "1.0.61", optional = true }
darwinia-evm-precompile = { default-features = false, path = "../../../evm/precompile" }
dvm-ethereum = { default-features = false, path = "../../../dvm" }
ethereum-types = { default-features = false, version = "0.9" }
rustc-hex      = { default-features = false, version = "2.1.0" }
# substrate
frame-support = { default-features = false, git = "https://github.com/darwinia-network/substrate.git", branch = "common-library" }
darwinia-support = { default-features = false, path = "../../../support" }
frame-system  = { default-features = false, git = "https://github.com/darwinia-network/substrate.git", branch = "common-library" }
sp-io         = { default-features = false, git = "https://github.com/darwinia-network/substrate.git", branch = "common-library" }
sp-runtime    = { default-features = false, git = "https://github.com/darwinia-network/substrate.git", branch = "common-library" }
sp-std        = { default-features = false, git = "https://github.com/darwinia-network/substrate.git", branch = "common-library" }

[features]
default = ["std"]

std = [
	"substrate-std",
    "crates-std",
    "darwinia-std",
]

crates-std    = [
	"codec/std",
	"serde",
	"serde_json",
	"ethereum-types/std",
    "rustc-hex/std",
]

darwinia-std = [
    "darwinia-evm-precompile/std",
    "dvm-ethereum/std",
	"darwinia-support/std",
]

substrate-std = [
	"frame-support/std",
	"frame-system/std",
	"sp-io/std",
	"sp-runtime/std",
	"sp-std/std",
]
